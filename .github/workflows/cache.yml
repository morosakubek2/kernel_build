name: Cache

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Clone Repo Kernel_Build_Actions
      uses: whyakari/github-repo-action@v3.1
      with:
        owner: 'whyakari'
        repository: 'kernel_build_actions'
        access-token: ${{ secrets.TOKEN_GITHUB }}

    - name: Export Variables
      working-directory: ./kernel_build
      run: |
        echo "TOKEN_GITHUB=${{ secrets.TOKEN_GITHUB }}" >> .env
         
    - name: Check for Clang Update
      working-directory: ./kernel_build
      id: check-update
      run: |
        pip install load_dotenv
        python3 update.py
      continue-on-error: true

    - name: Download Clang
      if: steps.check-update.outcome == 'success'
      working-directory: ./kernel_build
      run: |
        chmod +x clang.sh
        ./clang.sh # download clang.

    - name: Setup GCC / GCC32 / Clang
      working-directory: ./kernel_build
      run: |
        TC_DIR="$HOME/tc/clang-19.0.0"
        GCC_64_DIR="$HOME/tc/aarch64-linux-android-14.0"
        GCC_32_DIR="$HOME/tc/arm-linux-androideabi-14.0"

        if ! [ -d "${GCC_64_DIR}" ]; then
            echo "gcc not found! Cloning to ${GCC_64_DIR}..."
            git clone --depth=1 -b gcc-master https://github.com/whyakari/gcc-arm64 ${GCC_64_DIR}
        fi

        if ! [ -d "${GCC_32_DIR}" ]; then
            echo "gcc_32 not found! Cloning to ${GCC_32_DIR}..."
            git clone --depth=1 -b gcc-master https://github.com/whyakari/gcc-arm ${GCC_32_DIR}
        fi

    - name: Cache Create
      id: tc-cache
      uses: actions/cache/save@v3
      with:
        path: /home/runner/tc
        key: ${{ runner.os }}-tc

    - name: Display cached directories
      run: |
        ls -R $HOME/tc/
